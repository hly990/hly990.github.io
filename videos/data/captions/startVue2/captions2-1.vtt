WEBVTT
Kind: captions
Language: zh-CN

00:00:00.185 --> 00:00:02.935
欢迎来到这一节，我们将学习vue.js的基本原理

00:00:02.935 --> 00:00:06.215
 

00:00:06.355 --> 00:00:09.705
我们一起开发一个简单的应用程序

00:00:10.015 --> 00:00:12.835
比较深入的创建vue视图实例

00:00:13.035 --> 00:00:16.115
查看此视图实例的基本解释和用到的基本知识

00:00:16.115 --> 00:00:18.955
 

00:00:18.955 --> 00:00:21.955
我们会创建多个视图实例

00:00:21.955 --> 00:00:22.955
将来在你的应用程序或页面中会用到它

00:00:23.155 --> 00:00:26.195
 

00:00:26.195 --> 00:00:28.895
我们首先需要用vue CLI创建一个项目

00:00:28.895 --> 00:00:32.025
然后打开main.js文件进行定义视图实例

00:00:32.025 --> 00:00:34.835
以及视图实例的渲染

00:00:34.835 --> 00:00:35.835
然后调用$mount函数和参数

00:00:36.055 --> 00:00:39.005
 

00:00:39.105 --> 00:00:41.965
参数是要渲染html标签的id

00:00:41.965 --> 00:00:45.175
 

00:00:45.175 --> 00:00:47.695
我们打开index.html,你能看到它就是div标签的id

00:00:48.765 --> 00:00:51.835
现在我们确保上面的代码可以执行

00:00:52.235 --> 00:00:55.545
切换到浏览器，看到期待的hello,world字符串

00:00:56.145 --> 00:00:59.145
我们现在回到代码编辑器

00:00:59.145 --> 00:01:02.075
我们更改一下渲染的方式

00:01:02.075 --> 00:01:04.765
我们用el属性代替$mount函数

00:01:04.765 --> 00:01:08.175
结果立即呈现

00:01:09.675 --> 00:01:12.615
刚才我们验证了渲染结果，它们在使用效果没有区别

00:01:14.475 --> 00:01:17.555
这两种区别在于

00:01:17.555 --> 00:01:20.905
el是在模板渲染时候挂载到DOM元素上

00:01:21.255 --> 00:01:24.035
 

00:01:24.035 --> 00:01:27.055
如果未指定el，vue对象属于‘未挂载’状态

00:01:27.055 --> 00:01:33.205
这个时候我们就需要$mount去手工挂载

00:01:33.205 --> 00:01:35.905
手工挂载是采用的延迟加载

00:01:35.905 --> 00:01:38.715
可以更快把视图展现给用户

00:01:39.205 --> 00:01:42.225
我们也可以说是保留对vue实例的引用

00:01:42.225 --> 00:01:45.105
 

00:01:45.105 --> 00:01:46.865
然后我们怎么去手工加载呢

00:01:48.395 --> 00:01:50.585
我先加一个later注释，后面会用到

00:01:50.685 --> 00:01:52.025
输入a.mount，参数是#app

00:01:52.545 --> 00:01:53.545
 

00:01:55.995 --> 00:01:58.405
 

00:01:58.405 --> 00:02:00.005
哦，是$mount函数

00:02:00.585 --> 00:02:02.965
保存，返回到浏览器，显示了hello,world

00:02:04.025 --> 00:02:06.125
我现在删除它

00:02:09.935 --> 00:02:12.545
在实例后面增加$mount，加上参数很重要

00:02:12.545 --> 00:02:15.625
参数是作为要去渲染的div标签

00:02:15.625 --> 00:02:16.625
 

00:02:17.405 --> 00:02:20.495
现在我们要去复制这个实例

00:02:20.975 --> 00:02:23.595
 

00:02:23.965 --> 00:02:26.935
复制以后，我也想在页面显示出来

00:02:27.575 --> 00:02:30.035
需要修改变量名为b ,参数为app2

00:02:30.645 --> 00:02:33.365
 

00:02:33.885 --> 00:02:36.395
还需要在index.html文件里面添加ID为app2的标签

00:02:37.895 --> 00:02:40.655
我们看看是否显示出来了

00:02:41.035 --> 00:02:43.765
现在显示了两个hello,world字符串

00:02:43.765 --> 00:02:45.725
 

00:02:45.725 --> 00:02:48.175
输出了相同内容的视图

00:02:48.175 --> 00:02:51.125
 

00:02:51.125 --> 00:02:54.125
通常你需要重复一些内容，你可以使用相同的视图

00:02:54.125 --> 00:02:57.155
 

00:02:57.155 --> 00:02:59.225
它们可以分布在页面的两个部分

00:02:59.505 --> 00:03:02.145
这是很好的选择

00:03:02.145 --> 00:03:05.055
当你只想渲染页面中的一部分

00:03:05.055 --> 00:03:10.385
而不是渲染整个页面

00:03:10.455 --> 00:03:13.155
从服务端呈现的html,比如php,ruby

00:03:13.155 --> 00:03:14.215
你想要在不同的地方显示视图

00:03:15.245 --> 00:03:17.695
现在我告诉你

00:03:17.695 --> 00:03:20.645
怎么检查正在运行的视图实例

00:03:20.655 --> 00:03:23.405
我打开了chrome的开发工具

00:03:23.945 --> 00:03:26.805
浏览器切换到控制台

00:03:26.805 --> 00:03:27.805
我现在先切回编辑器

00:03:29.025 --> 00:03:31.665
开发过程中我们需要在编辑器和浏览器来回切换

00:03:34.685 --> 00:03:37.565
我现在分别打印两个vue实例

00:03:37.565 --> 00:03:40.205
 

00:03:40.205 --> 00:03:43.595
 

00:03:43.845 --> 00:03:45.615
我想输出a,b的内容

00:03:46.595 --> 00:03:49.455
你可以看到浏览器控制台的内容

00:03:49.455 --> 00:03:52.055
它现在已经在控制台显示出来了

00:03:52.055 --> 00:03:54.585
每个实例具有唯一的ID

00:03:54.585 --> 00:03:57.565
 

00:03:59.055 --> 00:04:02.065
我们展开实例，看更详细的信息

00:04:02.065 --> 00:04:05.115
 

00:04:05.625 --> 00:04:08.985
可以看到它所有属性和信息

00:04:09.575 --> 00:04:12.425
如果你想深入研究视图怎么工作

00:04:12.545 --> 00:04:15.715
或者跟踪组件的执行状态

00:04:15.755 --> 00:04:19.145
这些信息非常有用

00:04:19.505 --> 00:04:22.485
你可以通过它去查看每个运行中的视图实例

00:04:22.485 --> 00:04:25.245
现在，我们知道了什么是视图实例

00:04:25.245 --> 00:04:28.045
以及怎么去初始化它

00:04:28.045 --> 00:04:30.815
我们能够通过el属性去创建它

00:04:30.815 --> 00:04:33.135
也能够通过$mount函数去延迟挂载

00:04:33.795 --> 00:04:37.175
下一节我们将详细讲解视图的生命周期

00:04:38.225 --> 00:04:41.215
 

00:04:41.215 --> 00:04:44.015
 

00:04:44.015 --> 00:04:46.115
 

00:04:46.115 --> 00:04:49.105
 

00:04:49.105 --> 00:04:52.055
 

00:04:52.055 --> 00:04:54.975
 

00:04:54.975 --> 00:04:58.245
 

00:04:58.335 --> 00:05:01.305
 

00:05:01.305 --> 00:05:04.315
 

00:05:04.315 --> 00:05:05.315
 

