WEBVTT
Kind: captions
Language: en

00:00:00.089 --> 00:00:02.193
component deep type in this video

00:00:02.193 --> 00:00:05.190
we're
going to take a look at vue.js components

00:00:05.190 --> 00:00:07.973
detail components in their own state

00:00:07.973 --> 00:00:10.910
and props and how to update components

00:00:10.910 --> 00:00:13.789
alright so I have my applet view file

00:00:13.789 --> 00:00:16.590
and I'm importing a component called

00:00:16.590 --> 00:00:19.530
glitch text so I just quickly want to

00:00:19.530 --> 00:00:22.470
show up how that looks because it's a

00:00:22.470 --> 00:00:24.901
texts reveal effect that frequently gets

00:00:24.901 --> 00:00:27.150
used in spy movies that I thought was

00:00:27.150 --> 00:00:29.160
very impressive for the first time

00:00:29.160 --> 00:00:31.170
probably when I was a child so pay

00:00:31.170 --> 00:00:36.230
attention to its Berlin Germany 1989

00:00:36.539 --> 00:00:38.884
so what you can see is that the text

00:00:38.884 --> 00:00:41.489
gets revealed character by character but

00:00:41.489 --> 00:00:43.664
there is something else going on there

00:00:43.664 --> 00:00:45.839
are these weird characters that aren't

00:00:45.839 --> 00:00:48.238
really usually used in sentences or all

00:00:48.238 --> 00:00:50.699
these weird special characters that kind

00:00:50.699 --> 00:00:53.113
of are at the end of what gets revealed

00:00:53.113 --> 00:00:55.589
and then disappear so I'm gonna show you

00:00:55.589 --> 00:00:58.226
in just a moment how we did that

00:00:58.226 --> 00:01:01.440
otherwise this component is just as you

00:01:01.440 --> 00:01:03.780
remember it from the last video it says

00:01:03.780 --> 00:01:06.119
imported tanks from components glitched

00:01:06.119 --> 00:01:09.090
X and then it specifies that we want to

00:01:09.090 --> 00:01:11.909
use that component and data object we

00:01:11.909 --> 00:01:14.447
have a reveal string and that is

00:01:14.447 --> 00:01:17.460
currently Berlin Germany here and then

00:01:17.460 --> 00:01:20.430
we have a method called change text and

00:01:20.430 --> 00:01:23.399
this will override our reveal string to

00:01:23.399 --> 00:01:26.273
another city in another country and

00:01:26.273 --> 00:01:27.259
another year

00:01:27.259 --> 00:01:29.550
now looking at the glitch text component

00:01:29.550 --> 00:01:31.670
we can see that with passing the text

00:01:31.670 --> 00:01:34.717
hood and we're passing the speed so

00:01:34.717 --> 00:01:37.939
let's check that component up you can

00:01:37.939 --> 00:01:40.323
see that the template is very very short

00:01:40.323 --> 00:01:42.469
it's only displaced the text that is

00:01:42.469 --> 00:01:46.748
passed to it almost because you can see

00:01:46.748 --> 00:01:49.820
context it's not the problem

00:01:49.820 --> 00:01:52.906
so how that works just very briefly is

00:01:52.906 --> 00:01:55.910
that we have that object with current

00:01:55.910 --> 00:01:59.540
text which starts as an empty string and

00:01:59.540 --> 00:02:03.170
then we have a default speed and we have

00:02:03.170 --> 00:02:05.406
something called a glitch range so this

00:02:05.406 --> 00:02:07.700
is the weird characters you see when the

00:02:07.700 --> 00:02:11.433
text just gets revealed and then we have

00:02:11.433 --> 00:02:12.740
our final text

00:02:12.740 --> 00:02:15.078
so what happens a bit for the dampness

00:02:15.078 --> 00:02:17.540
we have a method called display text and

00:02:17.540 --> 00:02:19.860
this method takes care of revealing the

00:02:19.860 --> 00:02:22.180
letters one by one and you can see that

00:02:22.180 --> 00:02:28.660
it mostly consists of the settimeout
method and it has the speed at the end

00:02:28.660 --> 00:02:33.500
so for example with the default speed
every 300 milliseconds it would add

00:02:33.500 --> 00:02:36.250
another character

00:02:41.550 --> 00:02:47.830
so the method calls discharge picks a
random character from

00:02:47.830 --> 00:02:53.430
this string up here and displays it at
the end of the string

00:02:53.430 --> 00:02:57.930
so now we know how the component works
let's get back to our apt with you and

00:02:57.930 --> 00:03:03.540
actually demo the feature so let's
change the text and let's see what

00:03:03.540 --> 00:03:05.810
happens

00:03:06.780 --> 00:03:14.370
as expected it changes the text and that
is due to that we watched for changes so

00:03:14.370 --> 00:03:20.760
the watch object in a component in views
this o view please pay attention to what

00:03:20.760 --> 00:03:26.130
happens with this variable that I get so
in this case we're watching for the text

00:03:26.130 --> 00:03:32.250
and then we define the function and then
you can call this anything so a lot of

00:03:32.250 --> 00:03:36.450
people call this Val or value because it
represents the new value that is

00:03:36.450 --> 00:03:41.400
supposed to be received and if you have
two arguments you can also have old

00:03:41.400 --> 00:03:46.410
value and new audio so you can compare
the two before deciding if you actually

00:03:46.410 --> 00:03:51.630
need to update your component or not so
what I chose to do was to reset the

00:03:51.630 --> 00:03:57.420
context and to start the function that
reveals the text from scratch if you

00:03:57.420 --> 00:04:03.090
start from an empty string again
you can have many components at once and

00:04:03.090 --> 00:04:08.880
let's see what happens if we have this
component more times and also that we

00:04:08.880 --> 00:04:15.549
change the speed prop
so this now means that this changes or

00:04:15.549 --> 00:04:19.239
this adds another character to the
reveal every hundred milliseconds every

00:04:19.239 --> 00:04:22.650
200 milliseconds and every three
milliseconds

00:04:22.650 --> 00:04:27.330
so right now you can see we have the
component three times and let's change

00:04:27.330 --> 00:04:29.780
the hex

00:04:31.879 --> 00:04:36.800
so as you can see they reveal at
different paces and I would say the

00:04:36.800 --> 00:04:40.399
bottom one feels a bit slow if you
reveal tech side that to the users of

00:04:40.399 --> 00:04:43.879
your app they might get very very
annoyed and hit the and very very

00:04:43.879 --> 00:04:49.819
quickly once the quicker speeds I would
say can add to the field for example if

00:04:49.819 --> 00:04:54.110
you're doing a game or heavenly game you
find that so now we've learned how to

00:04:54.110 --> 00:05:00.080
use components in their props and how to
specifically listen for changes and how

00:05:00.080 --> 00:05:04.459
to run our own methods in the context of
watching for these changes

00:05:04.459 --> 00:05:08.479
another thing that's probably noteworthy
is to point out that your child

00:05:08.479 --> 00:05:14.269
component components each keep their own
state so if they have data function that

00:05:14.269 --> 00:05:19.099
returns a data object they are
independent from the other components

00:05:19.099 --> 00:05:23.660
that have the same name
because even though they all get the

00:05:23.660 --> 00:05:28.490
same problem they can act on that
however they choose so if for example

00:05:28.490 --> 00:05:31.970
there was a randomized function in there
or something would happen in your

00:05:31.970 --> 00:05:36.860
component that has network access so you
call something from an API and the

00:05:36.860 --> 00:05:40.010
difference in time causes different
things to appear your components to be

00:05:40.010 --> 00:05:46.490
on state so let's say you have a minute
of delay in the month in the next video

00:05:46.490 --> 00:05:51.100
we're going to have a look at basic
template interpolation

