WEBVTT
Kind: captions
Language: en

00:00:00.089 --> 00:00:04.950
vue.js模板指令 。本节我们将学习什么是模版指令

00:00:04.950 --> 00:00:08.710
以及怎样自定义开发模版指令

00:00:08.710 --> 00:00:10.019
 

00:00:10.019 --> 00:00:15.590
我们看代码，logIn登录我们用到了v-if的模版指令

00:00:15.590 --> 00:00:23.160
值是loggedIn，其实是关联到我们的数据对象

00:00:23.160 --> 00:00:28.439
我们看一下数据对象，缺省loggedIn返回false，现在我们点击一下login按钮

00:00:28.439 --> 00:00:34.739
它运行login函数，把loggedIn的值改为true

00:00:34.739 --> 00:00:37.440
 

00:00:37.440 --> 00:00:39.140
 

00:00:39.140 --> 00:00:45.500
现在你看状态已经变为已经登录状态了。根据v-if可以针对不同状态做处理

00:00:45.500 --> 00:00:50.540
用户做登录操作时候，视图将检查v-if的变量

00:00:50.540 --> 00:00:56.510
如果变量的值为true，将显示登录后的内容，否则给出未登录提示。

00:00:56.510 --> 00:01:00.830
你看代码的第6行

00:01:00.830 --> 00:01:05.780
如果登录成功， 将输出You are logged in!

00:01:05.780 --> 00:01:11.900
 

00:01:11.900 --> 00:01:16.670
否则，将进入v-else逻辑模块

00:01:16.670 --> 00:01:20.060
输出未登录提示信息

00:01:20.060 --> 00:01:23.080
当我们点击login按钮，使用模版指令将非常简单的做条件判断

00:01:23.080 --> 00:01:30.070
是进入登录后逻辑，还是未登录逻辑模块

00:01:30.070 --> 00:01:35.830
我们现在对代码做一些修改，增加一个v-show逻辑块

00:01:35.830 --> 00:01:40.360
登录后的用户将看到商店信息

00:01:40.360 --> 00:01:42.899
 

00:01:42.909 --> 00:01:48.549
我现在给v-show添加值loggedIn,我们回来浏览器页面

00:01:48.549 --> 00:01:54.220
刷新下页面，我们看到登录状态为已登录，同时商品列表显示出来了

00:01:54.220 --> 00:02:00.220
当我们点击login按钮，我们的代码逻辑是loggedIn为true

00:02:00.220 --> 00:02:05.679
所以商品列表信息显示出来了。Milk,Toast,Honey

00:02:05.679 --> 00:02:10.750
我们回到代码界面，看看v-for指令。你能看到里面有一对ul标签，ul标签里面套了一对li标签

00:02:10.750 --> 00:02:15.819
li标签有一个v-for指令去循环商品列表，在li标签内插入了双花括号，括号里面是item变量

00:02:15.819 --> 00:02:20.830
我们把界面拉到数据对象部分

00:02:20.830 --> 00:02:25.799
我们看到shoppingList是一个数据对象，里面有Milk,Toast,Honey三个字符串

00:02:25.799 --> 00:02:31.630
我们在ul标签内部输出他们

00:02:31.630 --> 00:02:37.269
每个字符串输出一个li标签格式的内容

00:02:37.269 --> 00:02:43.060
我们需要去迭代shoppingList

00:02:43.060 --> 00:02:47.590
这就是就是通过v-for去绑定shoppingLIst数据对象，每个迭代的对象都有一个唯一的key

00:02:47.590 --> 00:02:52.299
我们想要获得这个key，方便后面做更多的操作

00:02:52.299 --> 00:02:59.920
我们添加index参数

00:02:59.920 --> 00:03:06.700
这是一个标准的数组对象，index为0，1，2

00:03:06.700 --> 00:03:13.670
我们再给li绑定一个key，v-bind:key的值是index。

00:03:13.670 --> 00:03:17.460
key是可选的，但会引起警告。

00:03:17.460 --> 00:03:23.460
如果现在渲染这个视图

00:03:23.460 --> 00:03:27.840
渲染出来的内容并没有什么不同，v-bind:key的作用是为了让渲染更平滑，

00:03:27.840 --> 00:03:33.120
其实就是对之前的数据加了缓存。

00:03:33.120 --> 00:03:37.290
就是为了防止每次重新渲染页面

00:03:37.290 --> 00:03:40.560
只是在数据变化的时候才渲染页面

00:03:40.560 --> 00:03:45.450
模版指令非常简单好用，我们也可以写一个自己的模版指令

00:03:45.450 --> 00:03:52.110
 

00:03:52.110 --> 00:03:57.410
我之前写了一个自定义的模版指令，我们来看看

00:03:57.410 --> 00:04:01.580
这是我们先切换到数据对象代码块

00:04:01.580 --> 00:04:07.160
在数据对象里面创建了一个变量,设置变量的值为true

00:04:07.160 --> 00:04:13.100
在页面上显示出一个绿色的box

00:04:13.100 --> 00:04:18.310
class为custom的div包含一个class为box的div

00:04:18.310 --> 00:04:23.770
这两个都是普通的html的标签

00:04:23.770 --> 00:04:33.310
但是我们给标签加上V指令，数据将绑定到标签上

00:04:33.310 --> 00:04:40.990
所以当插入V指令的时候，将运行自定义指令的inserted函数,

00:04:40.990 --> 00:04:49.030
参数是el，就是插入的这个class为box的div元素。

00:04:49.030 --> 00:04:54.340
接着我们移动它的实例为150px。

00:04:54.340 --> 00:05:00.420
我们设置box里面的文字为"catch me" 。现在我们看看页面渲染出来的样子

00:05:00.420 --> 00:05:06.280
基本玩法是我们用鼠标去点绿色方块，永远点不上，绿块会移走。

00:05:06.280 --> 00:05:13.280
所以这个指令允许我们去保持状态，不仅仅是简单的展示。

00:05:13.280 --> 00:05:17.060
因为我们直接去操作DOM,监听鼠标点击事件

00:05:17.060 --> 00:05:21.740
设置css的定位为相对定位，然后动态修改绿色块的位置

00:05:21.740 --> 00:05:27.170
如果你需要像这个例子一样

00:05:27.170 --> 00:05:31.220
想要用直接操作DOM的方式去改变渲染的html元素

00:05:31.220 --> 00:05:35.690
去代替使用vue.js的state

00:05:35.690 --> 00:05:41.600
那么自定义模版指令是一个好的方式。

00:05:41.600 --> 00:05:48.610
现在我想统计我点了多少次，我声明一个count的变量

00:05:49.960 --> 00:05:54.780
每次我鼠标点击一次，count就增加1。

00:05:54.780 --> 00:06:02.090
如果count次数超过9，我就修改绿色块中的文字为:P

00:06:02.090 --> 00:06:05.590
 

00:06:08.800 --> 00:06:16.110
现在我们去让这个笑脸显示出来。

00:06:17.170 --> 00:06:25.300
好了，我现在点了大概10次，笑脸(:P)出现了

00:06:25.300 --> 00:06:30.490
这个视频我们学习了一些vue的模版指令

00:06:30.490 --> 00:06:36.490
通过条件指令v-if显示true的结果，v-else 显示其它结果

00:06:36.490 --> 00:06:42.370
我们还学习了v-show指令

00:06:42.370 --> 00:06:47.350
如果登录成功，展示商品的列表信息。

00:06:47.350 --> 00:06:50.950
v-show用来判断是否显示。

00:06:50.950 --> 00:06:54.520
比如当用户登录后，给登录用户提供一些必要的展示。

00:06:54.520 --> 00:06:59.770
我们接着学习了v-for指令

00:06:59.770 --> 00:07:05.110
学习了怎么通过v-for去迭代list

00:07:05.110 --> 00:07:11.349
我们还学习了给迭代的list添加v-bind:key

00:07:11.349 --> 00:07:16.160
我们最后学习了自定义开发指令，你可以为每个html增加自定义指令，命名是前缀v-加上自定义的指令名

00:07:16.160 --> 00:07:21.069
无论什么html元素，都可以通过自定义指令直接操作DOM。

00:07:21.069 --> 00:07:25.599
我们下一节学习form表单操作

00:07:25.599 --> 00:07:28.949
 

