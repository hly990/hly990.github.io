WEBVTT
Kind: captions
Language: zh-CN

00:00:00.335 --> 00:00:02.335
创建一个美妙的项目

00:00:02.975 --> 00:00:05.755
我们使用npm和vue.js CLI

00:00:05.755 --> 00:00:08.785
 

00:00:08.785 --> 00:00:11.535
我们用命令行来创建应用程序

00:00:11.535 --> 00:00:14.485
执行过程中需要做一些选择

00:00:14.485 --> 00:00:17.195
你可以选择使用哪个组件

00:00:17.195 --> 00:00:20.005
如果你都想要，也可以选择全部

00:00:20.315 --> 00:00:23.335
好了，我们现在开始

00:00:23.335 --> 00:00:26.335
看一下如何安装vue.js

00:00:26.335 --> 00:00:29.205
它的命令行语法可以自动创建项目

00:00:29.205 --> 00:00:32.185
包括单文件组件和其它

00:00:32.185 --> 00:00:35.155
我们要做的第一件事情

00:00:35.155 --> 00:00:37.345
是使用npm全局安装

00:00:39.705 --> 00:00:42.565
i就是install

00:00:42.565 --> 00:00:45.345
-g参数是指的全局安装

00:00:45.345 --> 00:00:47.875
这样vue.js可以在全局可用

00:00:47.875 --> 00:00:48.905
 

00:00:49.325 --> 00:00:52.195
 

00:00:52.195 --> 00:00:53.485
这样在任意文件目录下都可以调用vue.js指令

00:00:56.055 --> 00:00:57.645
然后我们输入vue create myapp

00:00:58.395 --> 00:00:59.395
 

00:01:00.025 --> 00:01:01.025
 

00:01:02.845 --> 00:01:05.625
现在有一系列问题需要我们回答

00:01:05.625 --> 00:01:08.635
我们可以用箭头键选择

00:01:08.635 --> 00:01:09.635
我们要选择的选项

00:01:09.905 --> 00:01:12.175
 

00:01:12.175 --> 00:01:14.715
这是我选择了手动选择，你也可以选择默认

00:01:16.055 --> 00:01:17.225
现在你可以看到预处理选项

00:01:17.535 --> 00:01:20.845
 

00:01:21.085 --> 00:01:24.195
你可以选择你想使用的

00:01:24.195 --> 00:01:27.195
这是一个多选项

00:01:27.195 --> 00:01:30.185
使用空格键可以选中和取消

00:01:30.185 --> 00:01:33.205
比如我想要pwa支持，typscript，状态管理等

00:01:33.205 --> 00:01:36.015
 

00:01:37.485 --> 00:01:40.515
我现在选中了Babel

00:01:40.515 --> 00:01:43.165
它是基本的预处理器

00:01:43.165 --> 00:01:46.085
允许你使用最新的javascript版本

00:01:46.085 --> 00:01:49.105
它可以把最新的javascript版本转换成ES5语法

00:01:49.105 --> 00:01:50.105
 

00:01:50.415 --> 00:01:53.655
 

00:01:53.865 --> 00:01:56.905
所以你的程序可以在主流的浏览器版本运行

00:01:57.865 --> 00:01:59.625
选择完后继续下一组

00:02:00.245 --> 00:02:03.155
他会让你选择linting相关的事情

00:02:03.155 --> 00:02:06.075
Eslint是格式检查器

00:02:06.075 --> 00:02:08.965
它会规范你的编码格式，不合规范会有提示

00:02:10.615 --> 00:02:13.605
我们选择标准eslint配置

00:02:13.605 --> 00:02:16.245
你也可以选择在什么时候进行lint检查

00:02:17.035 --> 00:02:19.705
第一个是保存文件时候检查

00:02:19.705 --> 00:02:22.775
你写完代码保存，会提示你编码规范是否正确

00:02:22.775 --> 00:02:25.385
我们假设使用上eslint后，代码都是符合规范的

00:02:25.485 --> 00:02:28.625
第二个选择是

00:02:28.625 --> 00:02:31.695
在修复和提交代码时候检查

00:02:31.695 --> 00:02:34.045
如果你提交代码，会自动检查

00:02:34.045 --> 00:02:36.455
这样对你代码规范更好

00:02:36.455 --> 00:02:39.460
然后我们选择我们想要的配置文件

00:02:39.460 --> 00:02:42.655
使用单独的package.json文件

00:02:42.655 --> 00:02:44.925
或者分开为专用配置文件

00:02:44.925 --> 00:02:47.705
我推荐使用专用配置文件

00:02:47.705 --> 00:02:48.745
因为它更容易自定义你的应用程序

00:02:50.075 --> 00:02:52.925
然后还会问你是否保存这些配置

00:02:52.925 --> 00:02:56.105
选择默认，就是自动保存

00:02:56.395 --> 00:02:59.315
这样其它vue项目也用应用上述配置

00:02:59.315 --> 00:03:02.315
我建议你这样做

00:03:02.315 --> 00:03:05.265
如果你要开发多个vue应用

00:03:05.265 --> 00:03:08.465
就不用重复配置了

00:03:10.245 --> 00:03:13.105
现在正在创建项目

00:03:13.105 --> 00:03:16.215
CLI会根据配置执行脚本

00:03:16.215 --> 00:03:19.315
它使用npm安装所有依赖项

00:03:19.315 --> 00:03:22.195
 

00:03:22.195 --> 00:03:25.225
例如，你选择的脚本类型，路由器等

00:03:25.225 --> 00:03:26.955
安装完后，进入应用程序目录

00:03:27.835 --> 00:03:29.075
 

00:03:33.305 --> 00:03:34.305
屏幕显示已经告诉我们

00:03:34.365 --> 00:03:37.315
接下来要做什么

00:03:37.315 --> 00:03:40.455
它说先进入myapp目录，运行npm

00:03:43.325 --> 00:03:45.945
这里简单说一下版本管理

00:03:45.945 --> 00:03:48.795
我们在主分支上

00:03:48.795 --> 00:03:51.705
项目通过git进行管理

00:03:51.705 --> 00:03:54.595
我们提交项目用git进行版本管理

00:03:54.595 --> 00:03:57.655
通过shell设置，可以完全可以在命令行工作

00:03:57.655 --> 00:03:59.625
我推荐项目都要进行版本管理，这样更安全

00:04:03.655 --> 00:04:06.245
好了，运行npm后我们看看发生什么

00:04:06.245 --> 00:04:09.525
 

00:04:09.525 --> 00:04:11.155
刚才屏幕列表显示了很多javascript文件被编译

00:04:11.995 --> 00:04:14.195
我们现在看屏幕右边浏览器

00:04:14.825 --> 00:04:17.835
这个页面就是Vue CLI编译后生成的页面

00:04:17.835 --> 00:04:20.145
 

00:04:20.145 --> 00:04:23.225
这是生成的一个首页

00:04:23.225 --> 00:04:26.685
显示这些插件被安装

00:04:26.745 --> 00:04:29.785
babel,eslint，还给出了链接

00:04:29.785 --> 00:04:30.785
 

00:04:31.005 --> 00:04:34.055
 

00:04:34.055 --> 00:04:35.905
我们输入code .进入代码编辑器看看发生了什么

00:04:36.665 --> 00:04:39.595
现在打开了我的代码编辑器

00:04:39.595 --> 00:04:42.595
 

00:04:42.675 --> 00:04:45.495
我们看看myapp项目的目录有哪些

00:04:45.495 --> 00:04:48.585
我们先看看目录下的配置文件

00:04:49.005 --> 00:04:51.985
我们看生成了eslint配置

00:04:51.985 --> 00:04:54.665
postcss配置

00:04:54.665 --> 00:04:57.355
babel配置

00:04:58.285 --> 00:05:01.205
在package.json中我们看安装了哪些插件

00:05:01.205 --> 00:05:03.955
 

00:05:03.955 --> 00:05:06.715
我们看到vue是一个依赖

00:05:06.715 --> 00:05:09.605
然后看到了cli安装的插件

00:05:10.465 --> 00:05:13.435
我们再打开src源码文件夹看看

00:05:13.435 --> 00:05:14.435
你的应用程序将存在这些地方

00:05:15.415 --> 00:05:18.585
main.js是入口文件

00:05:19.645 --> 00:05:22.625
然后我们来看看app.vue文件里面

00:05:22.625 --> 00:05:25.715
app.vue被渲染生成页面

00:05:25.715 --> 00:05:28.735
我们看到里面其中一个是template

00:05:28.735 --> 00:05:31.615
还有script和style部分

00:05:32.195 --> 00:05:35.195
 

00:05:35.195 --> 00:05:38.125
这是单文件组件的一种格式

00:05:38.125 --> 00:05:41.285
这跟angular框架很类似

00:05:41.285 --> 00:05:43.795
angular组件也是类似这样的写法

00:05:44.755 --> 00:05:47.565
我们打开components目录

00:05:47.625 --> 00:05:50.560
有一个helloworld.vue文件

00:05:50.560 --> 00:05:52.785
这就是我们在浏览器看到的内容

00:05:53.835 --> 00:05:56.745
 

00:05:56.925 --> 00:05:59.095
这是网站的logo文件

00:06:00.275 --> 00:06:03.105
单文件组件的优点是非常清晰的代码结构

00:06:03.105 --> 00:06:06.025
 

00:06:06.025 --> 00:06:09.095
它非常容易分离和定义依赖

00:06:09.095 --> 00:06:10.095
例如这个例子

00:06:10.295 --> 00:06:13.335
我们想要显示的内容

00:06:13.335 --> 00:06:15.335
就是导入了Hellowold组件

00:06:16.415 --> 00:06:19.255
我们再看看index.html

00:06:19.255 --> 00:06:22.015
 

00:06:22.265 --> 00:06:24.765
这里有id为app的div标签

00:06:24.765 --> 00:06:26.145
我们所有app的组件和里面的逻辑就渲染到这个div

00:06:26.485 --> 00:06:29.025
 

00:06:29.025 --> 00:06:32.275
如果用户禁止了javascript，将什么都不会显示

00:06:32.625 --> 00:06:35.705
 

00:06:36.775 --> 00:06:39.735
 

00:06:39.735 --> 00:06:42.755
下一节我们将深入研究vue.js的基本原理

00:06:42.755 --> 00:06:45.805
 

00:06:45.805 --> 00:06:47.145
 

