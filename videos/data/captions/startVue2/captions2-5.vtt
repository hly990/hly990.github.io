WEBVTT
Kind: captions
Language: en

00:00:00.120 --> 00:00:04.890
在模版中插入值

00:00:04.890 --> 00:00:09.210
这一节我们将学习vue.js的模版以及在模版中插入值

00:00:09.210 --> 00:00:14.400
vue.js模版让我们很容易显示json对象

00:00:14.400 --> 00:00:18.930
vue.js模版使用很简单，只是替换内容而已

00:00:18.930 --> 00:00:23.369
我们来看看模版，比如first name，用双花括号包含起来

00:00:23.369 --> 00:00:27.570
里面是一个firstName变量

00:00:27.570 --> 00:00:33.120
变量来自于数据对象，值是Jonathan,所以很简单，右边浏览器就输出了Jonathan.

00:00:33.120 --> 00:00:38.250
你能够使用所有类型的字符串

00:00:38.250 --> 00:00:44.430
你看我改变firstName的值为Jonathan

00:00:44.430 --> 00:00:50.489
右边输出没有改变。我们现在有first name，last name，我再加入一些其它字符串

00:00:50.489 --> 00:00:54.800
 

00:00:54.800 --> 00:01:00.180
我现在加入一个full name

00:01:00.180 --> 00:01:05.910
再在计算属性里面添加full name的值

00:01:05.910 --> 00:01:13.140
full name返回的是first name和last name拼接的字符串

00:01:13.140 --> 00:01:17.729
我们通过fullName函数返回这个值

00:01:17.729 --> 00:01:22.350
我们还是用双花括号，里面插入一个变量

00:01:22.350 --> 00:01:27.600
这个变量是计算属性的函数名

00:01:27.600 --> 00:01:33.780
现在我们在右边看到full name马上显示出来了

00:01:33.780 --> 00:01:40.670
在模版中，不管是数据对象还是计算属性，使用都是一样的

00:01:40.670 --> 00:01:46.560
好了，我们来看看复杂一点的对象

00:01:46.560 --> 00:01:51.000
我想要输出到页面，通常需要创建一个组件。

00:01:51.000 --> 00:01:55.950
但我们只是调试目的，就放一个对象，方便调试

00:01:55.950 --> 00:02:01.200
如果你正在做一个网络请求

00:02:01.200 --> 00:02:05.240
 

00:02:08.539 --> 00:02:14.390
你不需要做json字符串处理

00:02:14.390 --> 00:02:16.489
马上就能把这个对象在页面显示出来

00:02:16.489 --> 00:02:21.860
我们来看看实际工作原理

00:02:21.860 --> 00:02:25.370
我第一次使用这个功能时候非常高兴

00:02:25.370 --> 00:02:29.239
因为其它框架在页面上显示数据和交互要麻烦一些

00:02:29.239 --> 00:02:33.379
 

00:02:33.379 --> 00:02:38.420
我现在查看这个对象的enabled属性

00:02:38.420 --> 00:02:44.640
写法是compexObject.enabled，现在右边状态显示为false

00:02:44.640 --> 00:02:48.890
我们再看一个link的例子

00:02:52.590 --> 00:02:58.200
我现在写一个link标签

00:02:58.200 --> 00:03:03.750
保存文件，模版渲染时候报错了

00:03:03.750 --> 00:03:09.330
哦，我们给变量加上双引号

00:03:09.330 --> 00:03:14.820
还是有保错

00:03:14.820 --> 00:03:18.540
我们删除双花括号,添加vue指令:href

00:03:18.540 --> 00:03:26.040
我们再保存看看

00:03:26.040 --> 00:03:30.140
现在显示了link链接

00:03:30.140 --> 00:03:34.910
link链接将导航到我们的主网站

00:03:34.910 --> 00:03:41.660
我们点击link,看到导航到主网站了

00:03:41.660 --> 00:03:47.010
:href是一个缩写

00:03:47.010 --> 00:03:54.750
全部写出来是v-bind:href

00:03:54.750 --> 00:04:01.080
告诉view绑定href属性，这个html元素就可以正常运行了。

00:04:01.080 --> 00:04:03.410
图片标签也是这样

00:04:04.240 --> 00:04:10.020
我们写一个图片标签，添加一个src属性，给它一个实际的图片路径

00:04:10.020 --> 00:04:16.239
alt属性暂时不写，我们看到右侧图片渲染出来了

00:04:16.239 --> 00:04:22.719
因为我们可以直接在模版中使用html的img标签

00:04:22.719 --> 00:04:26.940
如果我们想要绑定数据

00:04:26.940 --> 00:04:33.470
我们同样需要提供一个数据源

00:04:33.470 --> 00:04:39.210
数据对象的数据源是imageURL

00:04:39.210 --> 00:04:41.479
我们输入imageURL数据源

00:04:44.120 --> 00:04:49.160
把src改为数据绑定:src

00:04:49.160 --> 00:04:52.210
右侧马上渲染出来了图片

00:04:52.810 --> 00:04:58.180
好了，我们这个视频学习了怎么在模版中插入字符串变量，并渲染出来

00:04:58.180 --> 00:05:05.020
n接着我们学习了使用计算属性在模版中的显示

00:05:05.020 --> 00:05:10.000
 

00:05:10.000 --> 00:05:16.570
接着我们还学习了复杂对象在模版中的使用和显示。

00:05:16.570 --> 00:05:23.200
t这里我们举了2个例子，超链接和图片标签的使用。

00:05:23.200 --> 00:05:29.440
如果你想要输出文本，就是把数据对象属性名插入两个花括号

00:05:29.440 --> 00:05:35.620
如果你想要渲染html标签

00:05:35.620 --> 00:05:41.080
就需要修改html的属性为数据绑定的属性

00:05:41.080 --> 00:05:46.630
绑定后模版就能渲染出正确的html元素和插入的数据。

00:05:46.630 --> 00:05:50.830
下一节我们详细讲模版指令

00:05:50.830 --> 00:05:53.400
 

